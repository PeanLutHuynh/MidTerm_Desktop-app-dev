// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Project.Data.Migrations
{
    [DbContext(typeof(BankingAppData))]
    [Migration("20250516072931_Bank")]
    partial class Bank
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Models.BankAccount", b =>
                {
                    b.Property<long>("Account_ID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Account_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("Owner_Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner_Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner_Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Account_ID");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Account_ID = 100001L,
                            Account_Type = "Checking",
                            Balance = 1000.0,
                            Owner_Address = "123 Main St, Anytown, USA",
                            Owner_Name = "Lac",
                            Owner_Phone = "555-1234",
                            Password = "password123"
                        },
                        new
                        {
                            Account_ID = 100002L,
                            Account_Type = "Savings",
                            Balance = 2000.0,
                            Owner_Address = "456 Elm St, Othertown, USA",
                            Owner_Name = "Gia",
                            Owner_Phone = "555-5678",
                            Password = "password456"
                        });
                });

            modelBuilder.Entity("Models.Transaction", b =>
                {
                    b.Property<Guid>("Trans_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("Account_ID")
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action_Desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Happened_Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Trans_ID");

                    b.HasIndex("Account_ID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Models.Transaction", b =>
                {
                    b.HasOne("Models.BankAccount", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("Account_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("Models.BankAccount", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
